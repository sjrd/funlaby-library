unit Chests;

uses
  FunLabyBase;

const
  SCategoryChests = 'Coffres';

components
  ClosedChest: TClosedChest;
  JustOpenedChest: TJustOpenedChest;
  EmptyOpenChest: TEmptyOpenChest;

obstacle TJustOpenedChest
  name 'Coffre qui vient juste d''être ouvert';
  image 'Chests/OpenChest';
  category SCategoryChests;

  property Tool: TTool;

  on DoDraw do
  var
    ToolContext: TDrawSquareContext;
  begin
    inherited;

    if Tool <> nil then
    begin
      ToolContext := TDrawSquareContext.Create(Bitmap,
        X, Y-HalfSquareSize, QPos);
      try
        ToolContext.SetTickCount(TickCount);
        Tool.Draw(ToolContext);
      finally
        ToolContext.Free;
      end;
    end;
  end;
end;

obstacle TClosedChest(TBlock)
  name 'Coffre fermé';
  image 'Chests/ClosedChest';
  category SCategoryChests;

  on AfterConstruction do
  begin
    HideEffectAndTool := True;

    inherited;
  end;

  on Pushing do
  begin
    inherited;

    try
      JustOpenedChest.Tool := Square.Tool;
      Square.Obstacle := JustOpenedChest;

      if Square.Tool <> nil then
        Square.Tool.Find(Context)
      else
        Player.ShowMessage('Il n''y avait rien dans ce coffre.');
    finally
      Square.Obstacle := EmptyOpenChest;
      JustOpenedChest.Tool := nil;
    end;
  end;
end;

obstacle TEmptyOpenChest
  name 'Coffre ouvert vide';
  image 'Chests/OpenChest';
  category SCategoryChests;
end;

end.
